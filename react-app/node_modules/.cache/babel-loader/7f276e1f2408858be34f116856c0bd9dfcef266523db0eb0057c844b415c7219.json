{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useSlotProps } from '@mui/base/utils';\nimport Grow from '@mui/material/Grow';\nimport MuiPaper from '@mui/material/Paper';\nimport MuiPopper from '@mui/material/Popper';\nimport MuiTrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback, unstable_ownerDocument as ownerDocument, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { getPickersPopperUtilityClass } from './pickersPopperClasses';\nimport { getActiveElement } from '../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper']\n  };\n  return composeClasses(slots, getPickersPopperUtilityClass, classes);\n};\nconst PickersPopperRoot = styled(MuiPopper, {\n  name: 'MuiPickersPopper',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    zIndex: theme.zIndex.modal\n  };\n});\nconst PickersPopperPaper = styled(MuiPaper, {\n  name: 'MuiPickersPopper',\n  slot: 'Paper',\n  overridesResolver: (_, styles) => styles.paper\n})(_ref2 => {\n  let {\n    ownerState\n  } = _ref2;\n  return _extends({\n    transformOrigin: 'top center',\n    outline: 0\n  }, ownerState.placement === 'top' && {\n    transformOrigin: 'bottom center'\n  });\n});\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\r\n * Based on @mui/material/ClickAwayListener without the customization.\r\n * We can probably strip away even more since children won't be portaled.\r\n * @param {boolean} active Only listen to clicks when the popper is opened.\r\n * @param {(event: MouseEvent | TouchEvent) => void} onClickAway The callback to call when clicking outside the popper.\r\n * @returns {Array} The ref and event handler to listen to the outside clicks.\r\n */\nfunction useClickAwayListener(active, onClickAway) {\n  const movedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!active) {\n      return undefined;\n    }\n\n    // Ensure that this hook is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    function armClickAwayListener() {\n      activatedRef.current = true;\n    }\n    document.addEventListener('mousedown', armClickAwayListener, true);\n    document.addEventListener('touchstart', armClickAwayListener, true);\n    return () => {\n      document.removeEventListener('mousedown', armClickAwayListener, true);\n      document.removeEventListener('touchstart', armClickAwayListener, true);\n      activatedRef.current = false;\n    };\n  }, [active]);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    if (!activatedRef.current) {\n      return;\n    }\n\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!nodeRef.current ||\n    // is a TouchEvent?\n    'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n    if (!insideDOM && !insideReactTree) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const handleSynthetic = () => {\n    syntheticEventRef.current = true;\n  };\n  React.useEffect(() => {\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener('touchstart', handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener('touchstart', handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [active, handleClickAway]);\n  React.useEffect(() => {\n    // TODO This behavior is not tested automatically\n    // It's unclear whether this is due to different update semantics in test (batched in act() vs discrete on click).\n    // Or if this is a timing related issues due to different Transition components\n    // Once we get rid of all the manual scheduling (e.g. setTimeout(update, 0)) we can revisit this code+test.\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener('click', handleClickAway);\n      return () => {\n        doc.removeEventListener('click', handleClickAway);\n        // cleanup `handleClickAway`\n        syntheticEventRef.current = false;\n      };\n    }\n    return undefined;\n  }, [active, handleClickAway]);\n  return [nodeRef, handleSynthetic, handleSynthetic];\n}\nexport function PickersPopper(inProps) {\n  var _slots$desktopTransit, _slots$desktopTrapFoc, _slots$desktopPaper, _slots$popper;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPickersPopper'\n  });\n  const {\n    anchorEl,\n    children,\n    containerRef = null,\n    shouldRestoreFocus,\n    onBlur,\n    onDismiss,\n    open,\n    role,\n    placement,\n    slots,\n    slotProps\n  } = props;\n  React.useEffect(() => {\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Blink?) use 'Esc'\n      if (open && (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc')) {\n        onDismiss();\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onDismiss, open]);\n  const lastFocusedElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (role === 'tooltip' || shouldRestoreFocus && !shouldRestoreFocus()) {\n      return;\n    }\n    if (open) {\n      lastFocusedElementRef.current = getActiveElement(document);\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\n      // make sure the button is flushed with updated label, before returning focus to it\n      // avoids issue, where screen reader could fail to announce selected date after selection\n      setTimeout(() => {\n        if (lastFocusedElementRef.current instanceof HTMLElement) {\n          lastFocusedElementRef.current.focus();\n        }\n      });\n    }\n  }, [open, role, shouldRestoreFocus]);\n  const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onBlur != null ? onBlur : onDismiss);\n  const paperRef = React.useRef(null);\n  const handleRef = useForkRef(paperRef, containerRef);\n  const handlePaperRef = useForkRef(handleRef, clickAwayRef);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      // stop the propagation to avoid closing parent modal\n      event.stopPropagation();\n      onDismiss();\n    }\n  };\n  const Transition = (_slots$desktopTransit = slots == null ? void 0 : slots.desktopTransition) != null ? _slots$desktopTransit : Grow;\n  const TrapFocus = (_slots$desktopTrapFoc = slots == null ? void 0 : slots.desktopTrapFocus) != null ? _slots$desktopTrapFoc : MuiTrapFocus;\n  const Paper = (_slots$desktopPaper = slots == null ? void 0 : slots.desktopPaper) != null ? _slots$desktopPaper : PickersPopperPaper;\n  const paperProps = useSlotProps({\n    elementType: Paper,\n    externalSlotProps: slotProps == null ? void 0 : slotProps.desktopPaper,\n    additionalProps: {\n      tabIndex: -1,\n      elevation: 8,\n      ref: handlePaperRef\n    },\n    className: classes.paper,\n    ownerState: {} // Is overridden below to use `placement\n  });\n\n  const Popper = (_slots$popper = slots == null ? void 0 : slots.popper) != null ? _slots$popper : PickersPopperRoot;\n  const popperProps = useSlotProps({\n    elementType: Popper,\n    externalSlotProps: slotProps == null ? void 0 : slotProps.popper,\n    additionalProps: {\n      transition: true,\n      role,\n      open,\n      anchorEl,\n      placement,\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState: props\n  });\n  return /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n    children: _ref3 => {\n      let {\n        TransitionProps,\n        placement: popperPlacement\n      } = _ref3;\n      return /*#__PURE__*/_jsx(TrapFocus, _extends({\n        open: open,\n        disableAutoFocus: true\n        // pickers are managing focus position manually\n        // without this prop the focus is returned to the button before `aria-label` is updated\n        // which would force screen readers to read too old label\n        ,\n\n        disableRestoreFocus: true,\n        disableEnforceFocus: role === 'tooltip',\n        isEnabled: () => true\n      }, slotProps == null ? void 0 : slotProps.desktopTrapFocus, {\n        children: /*#__PURE__*/_jsx(Transition, _extends({}, TransitionProps, slotProps == null ? void 0 : slotProps.desktopTransition, {\n          children: /*#__PURE__*/_jsx(Paper, _extends({}, paperProps, {\n            onClick: event => {\n              var _paperProps$onClick;\n              onPaperClick(event);\n              (_paperProps$onClick = paperProps.onClick) == null ? void 0 : _paperProps$onClick.call(paperProps, event);\n            },\n            onTouchStart: event => {\n              var _paperProps$onTouchSt;\n              onPaperTouchStart(event);\n              (_paperProps$onTouchSt = paperProps.onTouchStart) == null ? void 0 : _paperProps$onTouchSt.call(paperProps, event);\n            },\n            ownerState: _extends({}, ownerState, {\n              placement: popperPlacement\n            }),\n            children: children\n          }))\n        }))\n      }));\n    }\n  }));\n}","map":{"version":3,"names":["_extends","React","useSlotProps","Grow","MuiPaper","MuiPopper","MuiTrapFocus","unstable_useForkRef","useForkRef","unstable_useEventCallback","useEventCallback","unstable_ownerDocument","ownerDocument","unstable_composeClasses","composeClasses","styled","useThemeProps","getPickersPopperUtilityClass","getActiveElement","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","paper","PickersPopperRoot","name","slot","overridesResolver","_","styles","_ref","theme","zIndex","modal","PickersPopperPaper","_ref2","transformOrigin","outline","placement","clickedRootScrollbar","event","doc","documentElement","clientWidth","clientX","clientHeight","clientY","useClickAwayListener","active","onClickAway","movedRef","useRef","syntheticEventRef","nodeRef","activatedRef","useEffect","undefined","armClickAwayListener","current","document","addEventListener","removeEventListener","handleClickAway","insideReactTree","insideDOM","composedPath","indexOf","contains","target","handleSynthetic","handleTouchMove","PickersPopper","inProps","_slots$desktopTransit","_slots$desktopTrapFoc","_slots$desktopPaper","_slots$popper","props","anchorEl","children","containerRef","shouldRestoreFocus","onBlur","onDismiss","open","role","slotProps","handleKeyDown","nativeEvent","key","lastFocusedElementRef","HTMLElement","setTimeout","focus","clickAwayRef","onPaperClick","onPaperTouchStart","paperRef","handleRef","handlePaperRef","stopPropagation","Transition","desktopTransition","TrapFocus","desktopTrapFocus","Paper","desktopPaper","paperProps","elementType","externalSlotProps","additionalProps","tabIndex","elevation","ref","className","Popper","popper","popperProps","transition","onKeyDown","_ref3","TransitionProps","popperPlacement","disableAutoFocus","disableRestoreFocus","disableEnforceFocus","isEnabled","onClick","_paperProps$onClick","call","onTouchStart","_paperProps$onTouchSt"],"sources":["C:/Users/Syed Fraz/OneDrive/Documents/4th semester/DBMS/Final Project/GitLab Final Project/react-app/node_modules/@mui/x-date-pickers/internals/components/PickersPopper.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { useSlotProps } from '@mui/base/utils';\r\nimport Grow from '@mui/material/Grow';\r\nimport MuiPaper from '@mui/material/Paper';\r\nimport MuiPopper from '@mui/material/Popper';\r\nimport MuiTrapFocus from '@mui/material/Unstable_TrapFocus';\r\nimport { unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback, unstable_ownerDocument as ownerDocument, unstable_composeClasses as composeClasses } from '@mui/utils';\r\nimport { styled, useThemeProps } from '@mui/material/styles';\r\nimport { getPickersPopperUtilityClass } from './pickersPopperClasses';\r\nimport { getActiveElement } from '../utils/utils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    paper: ['paper']\r\n  };\r\n  return composeClasses(slots, getPickersPopperUtilityClass, classes);\r\n};\r\nconst PickersPopperRoot = styled(MuiPopper, {\r\n  name: 'MuiPickersPopper',\r\n  slot: 'Root',\r\n  overridesResolver: (_, styles) => styles.root\r\n})(({\r\n  theme\r\n}) => ({\r\n  zIndex: theme.zIndex.modal\r\n}));\r\nconst PickersPopperPaper = styled(MuiPaper, {\r\n  name: 'MuiPickersPopper',\r\n  slot: 'Paper',\r\n  overridesResolver: (_, styles) => styles.paper\r\n})(({\r\n  ownerState\r\n}) => _extends({\r\n  transformOrigin: 'top center',\r\n  outline: 0\r\n}, ownerState.placement === 'top' && {\r\n  transformOrigin: 'bottom center'\r\n}));\r\nfunction clickedRootScrollbar(event, doc) {\r\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\r\n}\r\n/**\r\n * Based on @mui/material/ClickAwayListener without the customization.\r\n * We can probably strip away even more since children won't be portaled.\r\n * @param {boolean} active Only listen to clicks when the popper is opened.\r\n * @param {(event: MouseEvent | TouchEvent) => void} onClickAway The callback to call when clicking outside the popper.\r\n * @returns {Array} The ref and event handler to listen to the outside clicks.\r\n */\r\nfunction useClickAwayListener(active, onClickAway) {\r\n  const movedRef = React.useRef(false);\r\n  const syntheticEventRef = React.useRef(false);\r\n  const nodeRef = React.useRef(null);\r\n  const activatedRef = React.useRef(false);\r\n  React.useEffect(() => {\r\n    if (!active) {\r\n      return undefined;\r\n    }\r\n\r\n    // Ensure that this hook is not \"activated\" synchronously.\r\n    // https://github.com/facebook/react/issues/20074\r\n    function armClickAwayListener() {\r\n      activatedRef.current = true;\r\n    }\r\n    document.addEventListener('mousedown', armClickAwayListener, true);\r\n    document.addEventListener('touchstart', armClickAwayListener, true);\r\n    return () => {\r\n      document.removeEventListener('mousedown', armClickAwayListener, true);\r\n      document.removeEventListener('touchstart', armClickAwayListener, true);\r\n      activatedRef.current = false;\r\n    };\r\n  }, [active]);\r\n\r\n  // The handler doesn't take event.defaultPrevented into account:\r\n  //\r\n  // event.preventDefault() is meant to stop default behaviors like\r\n  // clicking a checkbox to check it, hitting a button to submit a form,\r\n  // and hitting left arrow to move the cursor in a text input etc.\r\n  // Only special HTML elements have these default behaviors.\r\n  const handleClickAway = useEventCallback(event => {\r\n    if (!activatedRef.current) {\r\n      return;\r\n    }\r\n\r\n    // Given developers can stop the propagation of the synthetic event,\r\n    // we can only be confident with a positive value.\r\n    const insideReactTree = syntheticEventRef.current;\r\n    syntheticEventRef.current = false;\r\n    const doc = ownerDocument(nodeRef.current);\r\n\r\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\r\n    // 2. The child might render null.\r\n    // 3. Behave like a blur listener.\r\n    if (!nodeRef.current ||\r\n    // is a TouchEvent?\r\n    'clientX' in event && clickedRootScrollbar(event, doc)) {\r\n      return;\r\n    }\r\n\r\n    // Do not act if user performed touchmove\r\n    if (movedRef.current) {\r\n      movedRef.current = false;\r\n      return;\r\n    }\r\n    let insideDOM;\r\n\r\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\r\n    if (event.composedPath) {\r\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\r\n    } else {\r\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\r\n    }\r\n    if (!insideDOM && !insideReactTree) {\r\n      onClickAway(event);\r\n    }\r\n  });\r\n\r\n  // Keep track of mouse/touch events that bubbled up through the portal.\r\n  const handleSynthetic = () => {\r\n    syntheticEventRef.current = true;\r\n  };\r\n  React.useEffect(() => {\r\n    if (active) {\r\n      const doc = ownerDocument(nodeRef.current);\r\n      const handleTouchMove = () => {\r\n        movedRef.current = true;\r\n      };\r\n      doc.addEventListener('touchstart', handleClickAway);\r\n      doc.addEventListener('touchmove', handleTouchMove);\r\n      return () => {\r\n        doc.removeEventListener('touchstart', handleClickAway);\r\n        doc.removeEventListener('touchmove', handleTouchMove);\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [active, handleClickAway]);\r\n  React.useEffect(() => {\r\n    // TODO This behavior is not tested automatically\r\n    // It's unclear whether this is due to different update semantics in test (batched in act() vs discrete on click).\r\n    // Or if this is a timing related issues due to different Transition components\r\n    // Once we get rid of all the manual scheduling (e.g. setTimeout(update, 0)) we can revisit this code+test.\r\n    if (active) {\r\n      const doc = ownerDocument(nodeRef.current);\r\n      doc.addEventListener('click', handleClickAway);\r\n      return () => {\r\n        doc.removeEventListener('click', handleClickAway);\r\n        // cleanup `handleClickAway`\r\n        syntheticEventRef.current = false;\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [active, handleClickAway]);\r\n  return [nodeRef, handleSynthetic, handleSynthetic];\r\n}\r\nexport function PickersPopper(inProps) {\r\n  var _slots$desktopTransit, _slots$desktopTrapFoc, _slots$desktopPaper, _slots$popper;\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiPickersPopper'\r\n  });\r\n  const {\r\n    anchorEl,\r\n    children,\r\n    containerRef = null,\r\n    shouldRestoreFocus,\r\n    onBlur,\r\n    onDismiss,\r\n    open,\r\n    role,\r\n    placement,\r\n    slots,\r\n    slotProps\r\n  } = props;\r\n  React.useEffect(() => {\r\n    function handleKeyDown(nativeEvent) {\r\n      // IE11, Edge (prior to using Blink?) use 'Esc'\r\n      if (open && (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc')) {\r\n        onDismiss();\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onDismiss, open]);\r\n  const lastFocusedElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (role === 'tooltip' || shouldRestoreFocus && !shouldRestoreFocus()) {\r\n      return;\r\n    }\r\n    if (open) {\r\n      lastFocusedElementRef.current = getActiveElement(document);\r\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\r\n      // make sure the button is flushed with updated label, before returning focus to it\r\n      // avoids issue, where screen reader could fail to announce selected date after selection\r\n      setTimeout(() => {\r\n        if (lastFocusedElementRef.current instanceof HTMLElement) {\r\n          lastFocusedElementRef.current.focus();\r\n        }\r\n      });\r\n    }\r\n  }, [open, role, shouldRestoreFocus]);\r\n  const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onBlur != null ? onBlur : onDismiss);\r\n  const paperRef = React.useRef(null);\r\n  const handleRef = useForkRef(paperRef, containerRef);\r\n  const handlePaperRef = useForkRef(handleRef, clickAwayRef);\r\n  const ownerState = props;\r\n  const classes = useUtilityClasses(ownerState);\r\n  const handleKeyDown = event => {\r\n    if (event.key === 'Escape') {\r\n      // stop the propagation to avoid closing parent modal\r\n      event.stopPropagation();\r\n      onDismiss();\r\n    }\r\n  };\r\n  const Transition = (_slots$desktopTransit = slots == null ? void 0 : slots.desktopTransition) != null ? _slots$desktopTransit : Grow;\r\n  const TrapFocus = (_slots$desktopTrapFoc = slots == null ? void 0 : slots.desktopTrapFocus) != null ? _slots$desktopTrapFoc : MuiTrapFocus;\r\n  const Paper = (_slots$desktopPaper = slots == null ? void 0 : slots.desktopPaper) != null ? _slots$desktopPaper : PickersPopperPaper;\r\n  const paperProps = useSlotProps({\r\n    elementType: Paper,\r\n    externalSlotProps: slotProps == null ? void 0 : slotProps.desktopPaper,\r\n    additionalProps: {\r\n      tabIndex: -1,\r\n      elevation: 8,\r\n      ref: handlePaperRef\r\n    },\r\n    className: classes.paper,\r\n    ownerState: {} // Is overridden below to use `placement\r\n  });\r\n\r\n  const Popper = (_slots$popper = slots == null ? void 0 : slots.popper) != null ? _slots$popper : PickersPopperRoot;\r\n  const popperProps = useSlotProps({\r\n    elementType: Popper,\r\n    externalSlotProps: slotProps == null ? void 0 : slotProps.popper,\r\n    additionalProps: {\r\n      transition: true,\r\n      role,\r\n      open,\r\n      anchorEl,\r\n      placement,\r\n      onKeyDown: handleKeyDown\r\n    },\r\n    className: classes.root,\r\n    ownerState: props\r\n  });\r\n  return /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\r\n    children: ({\r\n      TransitionProps,\r\n      placement: popperPlacement\r\n    }) => /*#__PURE__*/_jsx(TrapFocus, _extends({\r\n      open: open,\r\n      disableAutoFocus: true\r\n      // pickers are managing focus position manually\r\n      // without this prop the focus is returned to the button before `aria-label` is updated\r\n      // which would force screen readers to read too old label\r\n      ,\r\n      disableRestoreFocus: true,\r\n      disableEnforceFocus: role === 'tooltip',\r\n      isEnabled: () => true\r\n    }, slotProps == null ? void 0 : slotProps.desktopTrapFocus, {\r\n      children: /*#__PURE__*/_jsx(Transition, _extends({}, TransitionProps, slotProps == null ? void 0 : slotProps.desktopTransition, {\r\n        children: /*#__PURE__*/_jsx(Paper, _extends({}, paperProps, {\r\n          onClick: event => {\r\n            var _paperProps$onClick;\r\n            onPaperClick(event);\r\n            (_paperProps$onClick = paperProps.onClick) == null ? void 0 : _paperProps$onClick.call(paperProps, event);\r\n          },\r\n          onTouchStart: event => {\r\n            var _paperProps$onTouchSt;\r\n            onPaperTouchStart(event);\r\n            (_paperProps$onTouchSt = paperProps.onTouchStart) == null ? void 0 : _paperProps$onTouchSt.call(paperProps, event);\r\n          },\r\n          ownerState: _extends({}, ownerState, {\r\n            placement: popperPlacement\r\n          }),\r\n          children: children\r\n        }))\r\n      }))\r\n    }))\r\n  }));\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}